--
-- Licensed to the Apache Software Foundation (ASF) under one or more
-- contributor license agreements.  See the NOTICE file distributed with
-- this work for additional information regarding copyright ownership.
-- The ASF licenses this file to You under the Apache License, Version 2.0
-- (the "License"); you may not use this file except in compliance with
-- the License.  You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- MODULE_INNER_CONFIGURATION.EDITOR
ALTER TABLE MODULE_INNER_CONFIGURATION DROP COLUMN EDITOR;

CREATE TABLE MODULE_INNER_CONFIGURATION_EDITOR_SETTING
(
  ID     BIGSERIAL    PRIMARY KEY,
  KEY    VARCHAR(255) NOT NULL,
  VALUE  VARCHAR(255) NOT NULL,
  MODULE_INNER_CONFIGURATION_ID  BIGINT  REFERENCES MODULE_INNER_CONFIGURATION (ID) ON DELETE CASCADE NOT NULL,
  UNIQUE(KEY, MODULE_INNER_CONFIGURATION_ID)
);

-- MODULE_INNER_CONFIGURATION.PROPERTIES
ALTER TABLE MODULE_INNER_CONFIGURATION DROP COLUMN PROPERTIES;

CREATE TABLE MODULE_PROPERTY_TYPE
(
  ID    BIGSERIAL    PRIMARY KEY,
  TYPE  VARCHAR(255) NOT NULL UNIQUE
);

-- represents ru.tinkoff.zeppelin.core.configuration.interpreter.ModuleProperty.Type
INSERT INTO MODULE_PROPERTY_TYPE(TYPE)
VALUES ('TEXTAREA'),
       ('STRING'),
       ('NUMBER'),
       ('URL'),
       ('PASSWORD'),
       ('CHECKBOX');

CREATE TABLE MODULE_INNER_CONFIGURATION_PROPERTY
(
  ID                             BIGSERIAL     PRIMARY KEY,
  PROPERTY_NAME                  VARCHAR(255)  NOT NULL,
  MODULE_INNER_CONFIGURATION_ID  BIGINT        REFERENCES MODULE_INNER_CONFIGURATION (ID) ON DELETE CASCADE NOT NULL,
  UNIQUE (PROPERTY_NAME, MODULE_INNER_CONFIGURATION_ID)
);

CREATE TABLE MODULE_INNER_CONFIGURATION_PROPERTY_DETAIL
(
  ID                             BIGSERIAL     PRIMARY KEY,
  TYPE                           VARCHAR(255)  REFERENCES MODULE_PROPERTY_TYPE (TYPE) ON DELETE CASCADE NOT NULL,
  ENV_NAME                       VARCHAR(255)  NOT NULL,
  KEY                            VARCHAR(255)  NOT NULL,
  DEFAULT_VALUE                  VARCHAR(255)  NOT NULL,
  VALUE                          VARCHAR(255)  NOT NULL,
  DESCRIPTION                    VARCHAR(255)  NOT NULL,
  MODULE_INNER_CONFIGURATION_PROPERTY_ID  BIGINT REFERENCES MODULE_INNER_CONFIGURATION_PROPERTY (ID) ON DELETE CASCADE NOT NULL,
  UNIQUE (KEY, MODULE_INNER_CONFIGURATION_PROPERTY_ID)
);

-- MODULE_CONFIGURATION.PERMISSIONS
ALTER TABLE MODULE_CONFIGURATION DROP COLUMN PERMISSIONS;

--CREATE TABLE USER_TYPE
--(
--  ID      BIGSERIAL    PRIMARY KEY,
--  TYPE    VARCHAR(255) NOT NULL UNIQUE
--);

--INSERT INTO USER_TYPE(TYPE)
--VALUES ('GROUP'),
--       ('USER');

CREATE TABLE MODULE_CONFIGURATION_PERMISSION
(
  ID                       BIGSERIAL  PRIMARY KEY,
  IS_ENABLED               BOOLEAN    NOT NULL,
  MODULE_CONFIGURATION_ID  BIGINT     REFERENCES MODULE_CONFIGURATION (ID) ON DELETE CASCADE NOT NULL UNIQUE
);

CREATE TABLE MODULE_CONFIGURATION_OWNER
(
  ID    BIGSERIAL    PRIMARY KEY,
  NAME  VARCHAR(255) NOT NULL,
--  TYPE  VARCHAR(255) REFERENCES USER_TYPE (TYPE) ON DELETE CASCADE NOT NULL,
  MODULE_CONFIGURATION_PERMISSION_ID  BIGINT REFERENCES MODULE_CONFIGURATION_PERMISSION (ID) ON DELETE CASCADE NOT NULL,
  UNIQUE(NAME, MODULE_CONFIGURATION_PERMISSION_ID)
);

-- NOTES.PERMISSIONS
ALTER TABLE NOTES DROP COLUMN PERMISSIONS;

CREATE TABLE NOTE_PERMISSION_TYPE
(
  ID    BIGSERIAL     PRIMARY KEY,
  TYPE  VARCHAR(255)  NOT NULL UNIQUE
);

INSERT INTO NOTE_PERMISSION_TYPE(TYPE)
VALUES  ('OWNER'),
        ('READER'),
        ('WRITER'),
        ('RUNNER');

CREATE TABLE NOTE_PERMISSION
(
  ID       BIGSERIAL    PRIMARY KEY,
  NAME     VARCHAR(255) NOT NULL,
  TYPE     VARCHAR(255) REFERENCES NOTE_PERMISSION_TYPE (TYPE) ON DELETE CASCADE NOT NULL,
  NOTE_ID  BIGINT       REFERENCES NOTES (ID) ON DELETE CASCADE NOT NULL,
  UNIQUE(NAME, TYPE, NOTE_ID)
);

-- NOTES.FORM_PARAMS
ALTER TABLE NOTES DROP COLUMN FORM_PARAMS;

CREATE TABLE NOTE_FORM_PARAMS
(
  ID       BIGSERIAL    PRIMARY KEY,
  KEY      VARCHAR(255) NOT NULL,
  VALUE    VARCHAR(255) NOT NULL,
  NOTE_ID  BIGINT       REFERENCES NOTES (ID) ON DELETE CASCADE NOT NULL,
  UNIQUE(KEY, NOTE_ID)
);

-- PARAGRAPHS.CONFIG
ALTER TABLE PARAGRAPHS DROP COLUMN CONFIG;

CREATE TABLE PARAGRAPH_CONFIG
(
  ID            BIGSERIAL    PRIMARY KEY,
  KEY           VARCHAR(255) NOT NULL,
  VALUE         VARCHAR(255) NOT NULL,
  PARAGRAPH_ID  BIGINT       REFERENCES PARAGRAPHS (ID) ON DELETE CASCADE NOT NULL,
  UNIQUE(KEY, PARAGRAPH_ID)
);

-- PARAGRAPHS.FORM_PARAMS
ALTER TABLE PARAGRAPHS DROP COLUMN FORM_PARAMS;

CREATE TABLE PARAGRAPH_FORM_PARAMS
(
  ID            BIGSERIAL    PRIMARY KEY,
  KEY           VARCHAR(255) NOT NULL,
  VALUE         VARCHAR(255) NOT NULL,
  PARAGRAPH_ID  BIGINT       REFERENCES PARAGRAPHS (ID) ON DELETE CASCADE NOT NULL,
  UNIQUE(KEY, PARAGRAPH_ID)
);
