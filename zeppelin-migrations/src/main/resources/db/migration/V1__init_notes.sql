CREATE TABLE notes
(
  id          BIGSERIAL  NOT NULL PRIMARY KEY,
  note_id     VARCHAR(9) NOT NULL UNIQUE,
  path        VARCHAR    NOT NULL,
  permissions JSON,
  gui         JSON
);

CREATE TABLE paragraphs
(
  id           BIGSERIAL NOT NULL PRIMARY KEY,
  paragraph_id VARCHAR   NOT NULL,
  note_id      VARCHAR(9) REFERENCES notes (note_id) ON DELETE CASCADE,
  title        VARCHAR,
  text         VARCHAR,
  username     VARCHAR,
  created      VARCHAR   NOT NULL,
  updated      VARCHAR   NOT NULL,
  config       JSON,
  gui          JSON,
  position     INTEGER,
  job_result   BIGINT,
  UNIQUE (paragraph_id, note_id)
);

CREATE TABLE JOB_BATCH
(
  ID         BIGSERIAL PRIMARY KEY,
  NOTE_ID    BIGINT      NOT NULL REFERENCES NOTES (ID) ON DELETE CASCADE,
  STATUS     VARCHAR(50) NOT NULL,
  CREATED_AT TIMESTAMP   NOT NULL,
  STARTED_AT TIMESTAMP,
  ENDED_AT   TIMESTAMP
);

CREATE TABLE JOB
(
  ID                       BIGSERIAL PRIMARY KEY,
  BATCH_ID                 BIGINT REFERENCES JOB_BATCH (ID) ON DELETE CASCADE,
  NOTE_ID                  BIGINT REFERENCES NOTES (ID) ON DELETE CASCADE,
  PARAGRAPH_ID             BIGINT REFERENCES PARAGRAPHS (ID) ON DELETE CASCADE,
  INDEX_NUMBER             INTEGER      NOT NULL,
  SHEBANG                  VARCHAR(100) NOT NULL,
  STATUS                   VARCHAR(50)  NOT NULL,
  INTERPRETER_PROCESS_UUID VARCHAR(200),
  INTERPRETER_JOB_UUID     VARCHAR(200),
  CREATED_AT               TIMESTAMP,
  STARTED_AT               TIMESTAMP,
  ENDED_AT                 TIMESTAMP
);

CREATE TABLE JOB_PAYLOAD
(
  ID      BIGSERIAL PRIMARY KEY,
  JOB_ID  BIGINT REFERENCES JOB (ID) ON DELETE CASCADE,
  PAYLOAD TEXT
);


CREATE TABLE JOB_RESULT
(
  ID         BIGSERIAL PRIMARY KEY,
  JOB_ID     BIGINT REFERENCES JOB (ID) ON DELETE CASCADE,
  CREATED_AT TIMESTAMP,
  TYPE       VARCHAR(50),
  RESULT     TEXT
);

ALTER TABLE paragraphs
  ADD FOREIGN KEY (job_result) REFERENCES JOB_RESULT (ID);

