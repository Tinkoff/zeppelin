#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

server.port = 8080

spring.datasource.dbcp2.url=jdbc:postgresql://localhost:5432/zeppelin?currentSchema=public
spring.datasource.dbcp2.username=postgres
spring.datasource.dbcp2.password=
spring.datasource.dbcp2.driver-class-name=org.postgresql.Driver
spring.datasource.dbcp2.initial-size=10
spring.datasource.dbcp2.max-total=25
spring.datasource.dbcp2.max-idle=25
spring.datasource.dbcp2.min-idle=0

spring.datasource.initialization-mode=never
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.out-of-order=true

zeppelin.admin_users=superuser
zeppelin.admin_group=superuser

zeppelin.note.defaultReaders=zp_reader,zp_test
zeppelin.note.defaultWriters=zp_reader,zp_test
zeppelin.note.defaultRunners=zp_reader,zp_test
zeppelin.note.defaultOwners=zp_reader,zp_test

zeppelin.thrift.address=127.0.0.1
zeppelin.thrift.port=40000

zeppelin.cron.enable=true

zeppelin.instance.markerPrefix=standalone

zeppelin.metaserver.address=http://localhost:9999
zeppelin.home_node=test
spring.mail.host=host
spring.mail.port=25
spring.mail.username=username
spring.mail.password= password
spring.mail.properties.mail.smtp.port=25
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false
spring.mail.properties.mail.smtp.starttls.required=false
zeppelin.email.username = username@example.ru
zeppelin.email.server = server
zeppelin.email.domain = @example.ru
zeppelin.notification.enable = false

#Шаблон текста письма для события - запуск ноутбука по расписанию.
# Доступнны поля:
#  note.uuid - Uuid идентификатор ноутбука
#  note.path - путь до ноутбука
#  scheduler.expression - выражение, задающее расписание запуска ноутбука на планировщике
#  scheduler.user - пользователь, установивший расписание запуска ноутбука на планировщике
#  scheduler.nextExecution - время следующего запуска ноутбука
zeppelin.email.textTemplate.run = <html>\
  <body>\
    Notebook <a href={server}/#/notebook/{note.uuid}> {note.path} </a> successfully started \
  on schedule: {scheduler.expression} (schedule created by {scheduler.user})\
    <br>Next execution on {scheduler.nextExecution}\
  </body>\
  </html>
#Шаблон текста письма для события - изменение расписания запуска ноутбука.
# Доступнны поля:
#  note.uuid - Uuid идентификатор ноутбука
#  note.path - путь до ноутбука
#  oldScheduler.expression - выражение,задающее предыдущее расписание запуска ноутбука на планировщике
#  oldScheduler.enable - флаг включения предыдущего расписания запуска ноутбука на планировщике
#  newScheduler.expression - выражение,задающее новое расписание запуска ноутбука на планировщике
#  newScheduler.enable - флаг включения нового расписания запуска ноутбука на планировщике
#  scheduler.user - пользователь, изменивший расписание запуска ноутбука на планировщике
#  scheduler.nextExecution - время следующего запуска ноутбука
zeppelin.email.textTemplate.scheduleChange = <html>\
  <body>\
    Notebook <a href={server}/#/notebook/{note.uuid}> {note.path} </a> \
    schedule change by {newScheduler.user}\
    <br>from {oldScheduler.expression}, enable: {oldScheduler.enable} \
    <br>to {newScheduler.expression}, enable: {newScheduler.enable} \
    <br>Next execution on {newScheduler.nextExecution}\
  </body>\
  </html>
#Шаблон текста письма для события - ошибка запуска ноутбука по расписанию.
# Доступнны поля:
#  note.uuid - Uuid идентификатор ноутбука
#  note.path - путь до ноутбука
#  scheduler.expression - выражение, задающее расписание запуска ноутбука на планировщике
#  scheduler.user - пользователь, установивший расписание запуска ноутбука на планировщике
#  scheduler.nextExecution - время следующего запуска ноутбука
zeppelin.email.textTemplate.error = <html>\
  <body>\
    Notebook <a href={server}/#/notebook/{note.uuid}> {note.path} </a> execution error\
    on schedule: {scheduler.expression} (schedule created by {scheduler.user})\
    <br>Next execution on {scheduler.nextExecution}\
  </body>\
  </html>
#Шаблон текста письма для события - успешное завершение запуска ноутбука по расписанию.
# Доступнны поля:
#  note.uuid - Uuid идентификатор ноутбука
#  note.path - путь до ноутбука
#  scheduler.expression - выражение, задающее расписание запуска ноутбука на планировщике
#  scheduler.user - пользователь, установивший расписание запуска ноутбука на планировщике
#  scheduler.nextExecution - время следующего запуска ноутбука
zeppelin.email.textTemplate.success = <html>\
  <body>\
    Notebook <a href={server}/#/notebook/{note.uuid}> {note.path} </a> successfully executed\
    on schedule: {scheduler.expression} (schedule created by {scheduler.user})\
    <br>Next execution on {scheduler.nextExecution}\
  </body>\
  </html>



